.SideBarLabelContainer {
    display: flex;
    align-items: center;
    padding: 0.5rem 1rem;
    cursor: pointer;
    width: 100%;
    gap: 1rem;
    border-radius: 0.5rem;
    color: var(--Primary-Text);

    position: relative;

    .SideBarLabelTitle {
        font: var(--Text-1);
        width: 100%;
        text-align: left;
        text-wrap: nowrap;
        line-height: 1.5rem;
        overflow: hidden;
        max-height: 1.5rem;
        text-overflow: ellipsis;
    }

    .SideBarLabelRight {
        width: fit-content;
        display: grid;
        grid-template-columns: max-content;
        align-items: center;
    }

    .SideBarLabelNumber {
        font: var(--Text-1);
        height: 2rem;
        grid-column: 1/2;
        grid-row: 1/2;
        width: 100%;
        text-align: right;
        transition-duration: 0s;
    }

    .SideBarLabelMore {
        transition-duration: 300ms;
        border: none;
        background-color: transparent;
        cursor: pointer;
        padding: 0.2rem 0.5rem;
        border-radius: 0.5rem;
        opacity: 0;
        z-index: 1;
        .Icon svg,
        .Icon path {
            fill: none;
            stroke: var(--Disabled);
            stroke-width: 0.2rem;
        }

        &:hover {
            background-color: var(--Hover-BG);
        }

        grid-column: 1/2;
        grid-row: 1/2;
    }

    .Icon svg,
    .Icon path {
        fill: var(--color);
    }
}

.SideBarLabelContainer:hover {
    background-color: var(--Hover-BG);

    .SideBarLabelNumber.isList {
        opacity: 0;
    }
    .SideBarLabelMore {
        opacity: 1;
    }
}

.SideBarLabelSelected,
.SideBarLabelSelected:hover {
    background-color: var(--Accent-BG);
    color: var(--Accent-Color);

    .Icon * {
        color: var(--Accent-Color);
        fill: var(--hover-color);
    }
}

.SideBarLabelMoreOptions {
    position: absolute;
    top: 100%;
    left: 99%;
    transform: translateX(-100%);
    display: flex;
    flex-direction: column;
    padding: 1rem;
    border-radius: 0.5rem;
    background-color: rgba(from var(--Primary-BG) r g b / 70%);
    backdrop-filter: blur(0.3rem);
    z-index: 9999;
    box-shadow: 0 0 0.5rem 0.1rem rgba(0, 0, 0, 0.1);
    width: 15rem;

    button {
        border: none;
        background-color: transparent;
        cursor: pointer;
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: 0.8rem;
        font: var(--Text-2);
        padding: 0.7rem;
        border-radius: 0.8rem;
        transition-duration: 0.3s;
        &:hover {
            border-color: transparent;
            background-color: var(--Hover-BG);
        }
    }

    .SideBarLabelMove,
    .SideBarLabelEdit {
        color: var(--Secondary-Text);

        .Icon * {
            fill: var(--Secondary-Text);
        }
        &:hover {
            background-color: rgba(from var(--Secondary-BG) r g b / 10%);
        }
    }

    .SideBarLabelDelete {
        color: var(--DateOverdue);
        .Icon * {
            fill: var(--DateOverdue);
        }

        &:hover {
            background-color: rgba(from var(--DateOverdue) r g b / 10%);
        }
    }
}

.SideBarLabelEditListContainer {
    display: grid;
    grid-template-rows: auto auto;
    grid-template-columns: auto auto;
    align-items: center;

    column-gap: 0.5rem;
    row-gap: 1rem;

    .SideBarLabelEditListTag {
        position: relative;
        padding: 0.5rem;
        border: solid 0.1rem rgba(from var(--color) r g b / 30%);
        border-radius: 0.5rem;
        transition-duration: 0.3s;

        input {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            cursor: pointer;
        }

        .Icon {
            svg,
            path {
                fill: var(--color);
            }
        }

        &:hover {
            border-color: rgba(from var(--color) r g b / 70%);
            background-color: rgba(from var(--color) r g b / 10%);
        }
    }
    & > input {
        border-radius: 0.5rem;
        border: solid 0.1rem rgba(0, 0, 0, 0.1);
        padding: 0.8rem;
        font: var(--Text-1);
        background-color: var(--Primary-BG);
        color: var(--Primary-Text);

        &:hover {
            border-color: var(--BorderColor2);
        }

        &:focus {
            border-color: rgba(0, 0, 0, 0.3);
            outline: none;
        }
    }

    .SideBarLabelEditListButtons {
        display: flex;
        flex-direction: row;
        gap: 0.5rem;
        grid-row: 2/3;
        grid-column: 1/3;
        justify-self: center;
    }
    .SideBarLabelEditListCancelButton,
    .SideBarLabelEditListSaveButton {
        width: 7rem;
        height: auto;
        padding: 0.5rem;
        border-radius: 0.5rem;
        font: var(--Text-2);

        display: flex;
        align-items: center;
        justify-content: center;

        gap: 0.5rem;
        cursor: pointer;

        transition-duration: 0.3s;
    }

    .SideBarLabelEditListCancelButton {
        border: solid 0.1rem var(--Secondary-Text);
        color: var(--Secondary-Text);
        .Icon {
            transform: rotate(45deg);
            svg,
            path {
                fill: var(--Secondary-Text);
                transition-duration: 0.3s;
            }
        }

        &:hover {
            background-color: var(--Secondary-Text);
            color: var(--Primary-BG);
            .Icon {
                svg,
                path {
                    fill: var(--Primary-BG);
                }
            }
        }
    }

    .SideBarLabelEditListSaveButton {
        border: solid 0.1rem var(--Accent-Color);
        color: var(--Accent-Color);
        .Icon {
            svg,
            path {
                fill: var(--Accent-Color);
                transition-duration: 0.3s;
            }
        }

        &:hover {
            background-color: var(--Accent-Color);
            color: var(--Primary-BG);
            .Icon {
                svg,
                path {
                    fill: var(--Primary-BG);
                }
            }
        }
    }
}
